#!/bin/bash
# Install xtc 
#
DIR=/home/thinclient
DESTINATION=/opt/thinclient
VAR=/var/thinclient
DATA=/data
echo "* start installation"
MODEL=""
OS="U"
if (cat /etc/issue | grep -i "RASPBIAN")
then
  OS="R"
  # detect pi hardware 
  MODEL=$(cat /proc/cpuinfo |grep "Revision" | cut -d: -f2 | sed 's/^[ \t]*//')
  if [ "$MODEL" = "a22082" ] || [ "$MODEL" = "a220a0" ] || [ "$MODEL" = "a32082" ] || [ "$MODEL" = "a52082" ] || [ "$MODEL" = "a22083" ] || [ "$MODEL" = "a02100" ] || [ "$MODEL" = "a020d3" ] || [ "$MODEL" = "a2082" ] || [ "$MODEL" = "a20a0" ]
  then
    MODEL="PI3"
  else
    MODEL="PI4"
  fi
fi

echo "System:" $OS
echo "Model:" $MODEL

# delete pulseaudio while problems with also sound
apt-get -y remove pulseaudio

echo "1. setup firstboot"
ln -s /lib/systemd/system/firstboot.service /etc/systemd/system/multi-user.target.wants/

echo "2. start ssh"
systemctl disable ssh > /dev/null 2>&1

echo "3. add user"
adduser --disabled-password --gecos "" system
echo system:system | chpasswd
usermod -a -G users system 
usermod -a -G video system

echo "4. create restore files"
mkdir /thinclient_restore
cp /etc/fstab /thinclient_restore
if [ "$OS" = "U" ]
then
  cp /etc/netplan/* /thinclient_restore
else
  cp /etc/dhcpcd.conf /thinclient_restore
  cp /etc/resolv.conf /thinclient_restore
  cp /etc/wpa_supplicant/wpa_supplicant.conf /thinclient_restore
fi
cp /lib/systemd/system/getty@.service /thinclient_restore
cp /etc/xdg/openbox/menu.xml /thinclient_restore
cp /etc/default/keyboard /thinclient_restore
cp $DIR/.bashrc /thinclient_restore
cp /etc/xdg/openbox/rc.xml /thinclient_restore
cp /etc/usbmount/usbmount.conf /thinclient_restore

echo "5. config sudo"
cat /etc/sudoers $DESTINATION/install/sudoers.txt > /tmp/sudoers 
mv /tmp/sudoers /etc/sudoers

echo "6. autologin"
sed -e 's/^ExecStart=.*$/ExecStart=-\/sbin\/agetty --noclear --autologin thinclient %I $TERM/g' -i /lib/systemd/system/getty@.service

echo "7. config openbox"
cp $DESTINATION/install/menu.xml /etc/xdg/openbox/
cp $DESTINATION/install/rc.xml /etc/xdg/openbox/

echo "8. config tint2"
chown -R thinclient $DIR/.config
chgrp -R thinclient $DIR/.config

echo "9. config user thinclient"
cat $DIR/.bashrc $DESTINATION/install/bashrc.txt > /tmp/bashrc
mv /tmp/bashrc $DIR/.bashrc
chown thinclient $DIR/.bashrc
chgrp thinclient $DIR/.bashrc

echo "10. install thinclient"
# debian package xtc 
if [ "$OS" = "U" ]
then
  cp -a $DESTINATION/script/ubuntu/tightvncpasswd $DESTINATION/script
else
  cp -a $DESTINATION/script/raspbian/tightvncpasswd $DESTINATION/script
fi
ln -s $DESTINATION/script/thinclient.sh /usr/bin/thinclient 

echo "11. create var directory"
mkdir $VAR
mkdir $VAR/home

echo "12. save home directory"
cp -a /home/thinclient $VAR/home
chown -R thinclient $VAR
chgrp -R thinclient $VAR

echo "13. install start script"
update-rc.d thinclient_start defaults

echo "14. install shutdown script"
update-rc.d thinclient_shutdown defaults

echo "15. install splashscreen"
systemctl enable splashscreen

echo "16. create data directory"
mkdir $DATA 2>> /dev/null

echo "17. mount data directory"
if [ "$OS" = "R" ]
then
  cat /etc/fstab $DESTINATION/install/fstab_data > /tmp/fstab
  mv /tmp/fstab /etc/fstab
  mount -a
fi

echo "18. config data directory"
chmod a=rwx $DATA 2>> /dev/null
mkdir $DATA/thinclient
chown thinclient $DATA/thinclient
chgrp thinclient $DATA/thinclient
mkdir $DATA/vpn
chown thinclient $DATA/vpn
chgrp thinclient $DATA/vpn 
mkdir $DATA/usb
chown thinclient $DATA/usb
chgrp thinclient $DATA/usb

echo "19. config read only fs"
if [ "$OS" = "R" ]
then
  sed '/\/ /s/defaults/ro,defaults/g' -i /etc/fstab
  sed '/\/boot/s/defaults/ro,defaults/g' -i /etc/fstab
  cat /etc/fstab $DESTINATION/install/fstab_ro > /tmp/fstab
  mv /tmp/fstab /etc/fstab
fi

echo "20. edit boot options (Rasberry Pi only)"
if [ "$OS" = "R" ]
then
  cp /boot/cmdline.txt /thinclient_restore
  # Use no swap, disable Raspberry pi logi, disable kernel output
  # Parameter net.ifnames=0 for /etc/network/interfaces with Raspbian Stretch
  sed 's/$/ noswap logo.nologo consoleblank=0 net.ifnames=0 loglevel=1 quiet/' -i /boot/cmdline.txt
fi

echo "21. config monitor and sound (Rasberry Pi only)"
if [ "$OS" = "R" ]
then
  cp /boot/config.txt /thinclient_restore
  sed 's/^#disable_overscan/disable_overscan/' -i /boot/config.txt
  # set Raspberry Pi to HDMI mode even if no HDMI monitor is detected
  sed 's/^#hdmi_force_hotplug=/hdmi_force_hotplug=/' -i /boot/config.txt
  # send sound to hdmi 
  sed 's/^#hdmi_drive=/hdmi_drive=/' -i /boot/config.txt
  # enable monitor stand by
  echo "hdmi_blanking=1" >> /boot/config.txt
  # disable Raspberry Pi color test
  echo "disable_splash=1" >> /boot/config.txt
fi

echo "23. install driver for pi desktop case (Raspbery Pi 3 only)"
if [ "$OS" = "R" ]
then
  dpkg -i /opt/thinclient/desktop/pidesktop-base.deb
  echo " " >> /boot/config.txt
  echo " " >> /boot/config.txt
fi

echo "24. disable GL driver (Raspberry Pi 4 only)"
if [ "$OS" = "R" ] && [ "$MODEL" = "PI4" ]
then
  # Raspberry Pi 4: disable GL driver
  sed 's/^dtoverlay=/#dtoverlay=/' -i /boot/config.txt
fi

echo "25. install software for argon1 case (Raspberry Pi 4 only)"
if [ "$OS" = "R" ]
then
  $DESTINATION/desktop/argon1.sh
  systemctl disable argononed
fi

echo "26. configure usb automount"
sed 's/^FS_MOUNTOPTIONS=/FS_MOUNTOPTIONS="-fstype=vfat,user=000,dmask=0000,fmask=0000,gid=thinclient,uid=thinclient"/' -i /etc/usbmount/usbmount.conf
# deactivate automount
mv /etc/usbmount/usbmount.conf /etc/usbmount/usbmount.conf.off
